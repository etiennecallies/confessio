# Generated by Django 5.0.8 on 2024-08-16 15:09

import django.db.models.deletion
import simple_history.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('home', '0088_historicalpruning'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalSentenceModeration',
            fields=[
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('validated_at', models.DateTimeField(null=True)),
                ('marked_as_bug_at', models.DateTimeField(null=True)),
                ('bug_description', models.CharField(default=None, max_length=200, null=True)),
                ('action', models.CharField(choices=[('show', 'Show'), ('hide', 'Hide'), ('stop', 'Stop')], max_length=4)),
                ('category', models.CharField(choices=[('ml_mismatch', 'Ml Mismatch')], max_length=12)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('marked_as_bug_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('sentence', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='home.sentence')),
                ('validated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical sentence moderation',
                'verbose_name_plural': 'historical sentence moderations',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='SentenceModeration',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('validated_at', models.DateTimeField(null=True)),
                ('marked_as_bug_at', models.DateTimeField(null=True)),
                ('bug_description', models.CharField(default=None, max_length=200, null=True)),
                ('action', models.CharField(choices=[('show', 'Show'), ('hide', 'Hide'), ('stop', 'Stop')], max_length=4)),
                ('category', models.CharField(choices=[('ml_mismatch', 'Ml Mismatch')], max_length=12)),
                ('marked_as_bug_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sentence_marked_as_bug_by', to=settings.AUTH_USER_MODEL)),
                ('sentence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moderations', to='home.sentence')),
                ('validated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sentence_validated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('sentence', 'category')},
            },
        ),
    ]
