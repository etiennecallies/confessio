# Generated by Django 5.0.9 on 2024-11-22 20:43

import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields
import django.db.models.deletion
import home.models.custom_fields
import pgvector.django.vector
import simple_history.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Church',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('location', django.contrib.gis.db.models.fields.PointField(geography=True, null=True, srid=4326)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('zipcode', models.CharField(max_length=5, null=True)),
                ('city', models.CharField(max_length=50, null=True)),
                ('messesinfo_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'get_latest_by': ['updated_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Classifier',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('transformer_name', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('prod', 'Prod')], max_length=5)),
                ('pickle', models.CharField()),
                ('accuracy', models.FloatField()),
                ('test_size', models.PositiveSmallIntegerField()),
            ],
            options={
                'get_latest_by': ['updated_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Diocese',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.CharField(max_length=100, unique=True)),
                ('messesinfo_network_id', models.CharField(max_length=100, unique=True)),
            ],
            options={
                'get_latest_by': ['updated_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('url', models.URLField()),
                ('pruning_validation_counter', models.SmallIntegerField(default=0)),
                ('pruning_last_validated_at', models.DateTimeField(blank=True, null=True)),
                ('parsing_validation_counter', models.SmallIntegerField(default=0)),
                ('parsing_last_validated_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Parsing',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('truncated_html', models.TextField(editable=False)),
                ('truncated_html_hash', models.CharField(editable=False, max_length=32)),
                ('church_desc_by_id', models.JSONField(editable=False)),
                ('llm_model', models.CharField(max_length=100)),
                ('prompt_template_hash', models.CharField(max_length=32)),
                ('error_detail', models.TextField(blank=True, null=True)),
                ('possible_by_appointment', models.BooleanField(null=True)),
                ('is_related_to_mass', models.BooleanField(null=True)),
                ('is_related_to_adoration', models.BooleanField(null=True)),
                ('is_related_to_permanence', models.BooleanField(null=True)),
                ('will_be_seasonal_events', models.BooleanField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Pruning',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('extracted_html', models.TextField(editable=False)),
                ('extracted_html_hash', models.CharField(editable=False, max_length=32, unique=True)),
                ('pruned_indices', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(), null=True, size=None)),
            ],
            options={
                'get_latest_by': ['updated_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Website',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=300)),
                ('home_url', models.URLField(unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('pruning_validation_counter', models.SmallIntegerField(default=0)),
                ('pruning_last_validated_at', models.DateTimeField(blank=True, null=True)),
                ('parsing_validation_counter', models.SmallIntegerField(default=0)),
                ('parsing_last_validated_at', models.DateTimeField(blank=True, null=True)),
                ('unreliability_reason', models.CharField(blank=True, choices=[('schedule_in_image', 'Schedule In Image'), ('javascript_required', 'Javascript Required'), ('not_responding_at_all', 'Not Responding At All'), ('not_responding_in_time', 'Not Responding In Time'), ('not_responding_200', 'Not Responding 200')], null=True)),
            ],
            options={
                'get_latest_by': ['updated_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricalClassifier',
            fields=[
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('transformer_name', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('prod', 'Prod')], max_length=5)),
                ('pickle', models.CharField()),
                ('accuracy', models.FloatField()),
                ('test_size', models.PositiveSmallIntegerField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical classifier',
                'verbose_name_plural': 'historical classifiers',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDiocese',
            fields=[
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('slug', models.CharField(db_index=True, max_length=100)),
                ('messesinfo_network_id', models.CharField(db_index=True, max_length=100)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical diocese',
                'verbose_name_plural': 'historical dioceses',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalParsing',
            fields=[
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('truncated_html', models.TextField(editable=False)),
                ('truncated_html_hash', models.CharField(editable=False, max_length=32)),
                ('church_desc_by_id', models.JSONField(editable=False)),
                ('llm_model', models.CharField(max_length=100)),
                ('prompt_template_hash', models.CharField(max_length=32)),
                ('error_detail', models.TextField(blank=True, null=True)),
                ('possible_by_appointment', models.BooleanField(null=True)),
                ('is_related_to_mass', models.BooleanField(null=True)),
                ('is_related_to_adoration', models.BooleanField(null=True)),
                ('is_related_to_permanence', models.BooleanField(null=True)),
                ('will_be_seasonal_events', models.BooleanField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical parsing',
                'verbose_name_plural': 'historical parsings',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPruning',
            fields=[
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('extracted_html', models.TextField(editable=False)),
                ('extracted_html_hash', models.CharField(db_index=True, editable=False, max_length=32)),
                ('pruned_indices', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(), null=True, size=None)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical pruning',
                'verbose_name_plural': 'historical prunings',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalWebsite',
            fields=[
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('name', models.CharField(max_length=300)),
                ('home_url', models.URLField(db_index=True)),
                ('is_active', models.BooleanField(default=True)),
                ('pruning_validation_counter', models.SmallIntegerField(default=0)),
                ('pruning_last_validated_at', models.DateTimeField(blank=True, null=True)),
                ('parsing_validation_counter', models.SmallIntegerField(default=0)),
                ('parsing_last_validated_at', models.DateTimeField(blank=True, null=True)),
                ('unreliability_reason', models.CharField(blank=True, choices=[('schedule_in_image', 'Schedule In Image'), ('javascript_required', 'Javascript Required'), ('not_responding_at_all', 'Not Responding At All'), ('not_responding_in_time', 'Not Responding In Time'), ('not_responding_200', 'Not Responding 200')], null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical website',
                'verbose_name_plural': 'historical websites',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Parish',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('messesinfo_network_id', models.CharField(max_length=100, null=True)),
                ('messesinfo_community_id', models.CharField(max_length=100, null=True, unique=True)),
                ('diocese', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parishes', to='home.diocese')),
                ('website', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parishes', to='home.website')),
            ],
            options={
                'get_latest_by': ['updated_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricalChurchModeration',
            fields=[
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('validated_at', models.DateTimeField(null=True)),
                ('marked_as_bug_at', models.DateTimeField(null=True)),
                ('bug_description', models.CharField(default=None, max_length=200, null=True)),
                ('category', models.CharField(choices=[('loc_null', 'Location Null'), ('loc_api', 'Location From Api'), ('name_differs', 'Name Differs'), ('parish_differs', 'Parish Differs'), ('location_differs', 'Location Differs'), ('added_church', 'Added Church'), ('deleted_church', 'Deleted Church'), ('location_conflict', 'Location Conflict')], max_length=17)),
                ('source', models.CharField(choices=[('messesinfo', 'Messesinfo'), ('lehavre', 'Lehavre')], max_length=10)),
                ('name', models.CharField(max_length=100, null=True)),
                ('location', django.contrib.gis.db.models.fields.PointField(geography=True, null=True, srid=4326)),
                ('address', models.CharField(max_length=100, null=True)),
                ('zipcode', models.CharField(max_length=5, null=True)),
                ('city', models.CharField(max_length=50, null=True)),
                ('messesinfo_id', models.CharField(max_length=100, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('church', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='home.church')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('marked_as_bug_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('validated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parish', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='home.parish')),
            ],
            options={
                'verbose_name': 'historical church moderation',
                'verbose_name_plural': 'historical church moderations',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalChurch',
            fields=[
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('name', models.CharField(max_length=100)),
                ('location', django.contrib.gis.db.models.fields.PointField(geography=True, null=True, srid=4326)),
                ('address', models.CharField(blank=True, max_length=100, null=True)),
                ('zipcode', models.CharField(max_length=5, null=True)),
                ('city', models.CharField(max_length=50, null=True)),
                ('messesinfo_id', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parish', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='home.parish')),
            ],
            options={
                'verbose_name': 'historical church',
                'verbose_name_plural': 'historical churchs',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name='church',
            name='parish',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='churches', to='home.parish'),
        ),
        migrations.CreateModel(
            name='OneOffSchedule',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('church_id', models.SmallIntegerField(blank=True, null=True)),
                ('is_cancellation', models.BooleanField()),
                ('start_time_iso8601', models.CharField(blank=True, max_length=8, null=True)),
                ('end_time_iso8601', models.CharField(blank=True, max_length=8, null=True)),
                ('year', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('month', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('day', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('weekday_iso8601', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('liturgical_day', models.CharField(blank=True, choices=[('ash_wednesday', 'ASH_WEDNESDAY'), ('palm_sunday', 'PALM_SUNDAY'), ('holy_monday', 'HOLY_MONDAY'), ('holy_tuesday', 'HOLY_TUESDAY'), ('holy_wednesday', 'HOLY_WEDNESDAY'), ('maundy_thursday', 'MAUNDY_THURSDAY'), ('good_friday', 'GOOD_FRIDAY'), ('holy_saturday', 'HOLY_SATURDAY'), ('easter_sunday', 'EASTER_SUNDAY'), ('ascension', 'ASCENSION'), ('pentecost', 'PENTECOST')], max_length=16, null=True)),
                ('parsing', simple_history.models.HistoricForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='one_off_schedules', to='home.parsing')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricalRegularSchedule',
            fields=[
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('church_id', models.SmallIntegerField(blank=True, null=True)),
                ('is_cancellation', models.BooleanField()),
                ('start_time_iso8601', models.CharField(blank=True, max_length=8, null=True)),
                ('end_time_iso8601', models.CharField(blank=True, max_length=8, null=True)),
                ('rrule', models.TextField()),
                ('include_periods', home.models.custom_fields.ChoiceArrayField(base_field=models.CharField(choices=[('january', 'JANUARY'), ('february', 'FEBRUARY'), ('march', 'MARCH'), ('april', 'APRIL'), ('may', 'MAY'), ('june', 'JUNE'), ('july', 'JULY'), ('august', 'AUGUST'), ('september', 'SEPTEMBER'), ('october', 'OCTOBER'), ('november', 'NOVEMBER'), ('december', 'DECEMBER'), ('advent', 'ADVENT'), ('lent', 'LENT'), ('school_holidays', 'SCHOOL_HOLIDAYS')], max_length=16), blank=True, size=None)),
                ('exclude_periods', home.models.custom_fields.ChoiceArrayField(base_field=models.CharField(choices=[('january', 'JANUARY'), ('february', 'FEBRUARY'), ('march', 'MARCH'), ('april', 'APRIL'), ('may', 'MAY'), ('june', 'JUNE'), ('july', 'JULY'), ('august', 'AUGUST'), ('september', 'SEPTEMBER'), ('october', 'OCTOBER'), ('november', 'NOVEMBER'), ('december', 'DECEMBER'), ('advent', 'ADVENT'), ('lent', 'LENT'), ('school_holidays', 'SCHOOL_HOLIDAYS')], max_length=16), blank=True, size=None)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parsing', simple_history.models.HistoricForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='home.parsing')),
            ],
            options={
                'verbose_name': 'historical regular schedule',
                'verbose_name_plural': 'historical regular schedules',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalParsingModeration',
            fields=[
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('validated_at', models.DateTimeField(null=True)),
                ('marked_as_bug_at', models.DateTimeField(null=True)),
                ('bug_description', models.CharField(default=None, max_length=200, null=True)),
                ('category', models.CharField(choices=[('new_schedules', 'New Schedules')], max_length=13)),
                ('validated_schedules_list', models.JSONField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('marked_as_bug_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('validated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parsing', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='home.parsing')),
            ],
            options={
                'verbose_name': 'historical parsing moderation',
                'verbose_name_plural': 'historical parsing moderations',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalOneOffSchedule',
            fields=[
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('church_id', models.SmallIntegerField(blank=True, null=True)),
                ('is_cancellation', models.BooleanField()),
                ('start_time_iso8601', models.CharField(blank=True, max_length=8, null=True)),
                ('end_time_iso8601', models.CharField(blank=True, max_length=8, null=True)),
                ('year', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('month', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('day', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('weekday_iso8601', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('liturgical_day', models.CharField(blank=True, choices=[('ash_wednesday', 'ASH_WEDNESDAY'), ('palm_sunday', 'PALM_SUNDAY'), ('holy_monday', 'HOLY_MONDAY'), ('holy_tuesday', 'HOLY_TUESDAY'), ('holy_wednesday', 'HOLY_WEDNESDAY'), ('maundy_thursday', 'MAUNDY_THURSDAY'), ('good_friday', 'GOOD_FRIDAY'), ('holy_saturday', 'HOLY_SATURDAY'), ('easter_sunday', 'EASTER_SUNDAY'), ('ascension', 'ASCENSION'), ('pentecost', 'PENTECOST')], max_length=16, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parsing', simple_history.models.HistoricForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='home.parsing')),
            ],
            options={
                'verbose_name': 'historical one off schedule',
                'verbose_name_plural': 'historical one off schedules',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='ParsingModeration',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('validated_at', models.DateTimeField(null=True)),
                ('marked_as_bug_at', models.DateTimeField(null=True)),
                ('bug_description', models.CharField(default=None, max_length=200, null=True)),
                ('category', models.CharField(choices=[('new_schedules', 'New Schedules')], max_length=13)),
                ('validated_schedules_list', models.JSONField(null=True)),
                ('marked_as_bug_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='parsing_marked_as_bug_by', to=settings.AUTH_USER_MODEL)),
                ('parsing', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moderations', to='home.parsing')),
                ('validated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='parsing_validated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('parsing', 'category')},
            },
        ),
        migrations.CreateModel(
            name='FineTunedLLM',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('fine_tuning', 'Fine Tuning'), ('failed', 'Failed'), ('draft', 'Draft'), ('prod', 'Prod')], max_length=12)),
                ('dataset_name', models.CharField(max_length=100)),
                ('base_model', models.CharField(max_length=100)),
                ('fine_tune_job_id', models.CharField(max_length=100)),
                ('fine_tuned_model', models.CharField(max_length=100, null=True)),
                ('error_detail', models.TextField(null=True)),
                ('parsing_moderations', models.ManyToManyField(related_name='fine_tuned_llms', to='home.parsingmoderation')),
            ],
            options={
                'get_latest_by': ['updated_at'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='parsing',
            name='prunings',
            field=models.ManyToManyField(related_name='parsings', to='home.pruning'),
        ),
        migrations.CreateModel(
            name='HistoricalSentence',
            fields=[
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('line', models.TextField(db_index=True)),
                ('action', models.CharField(choices=[('start', 'START'), ('show', 'SHOW'), ('hide', 'HIDE'), ('stop', 'STOP')], max_length=5)),
                ('source', models.CharField(choices=[('human', 'HUMAN'), ('ml', 'ML')], max_length=5)),
                ('transformer_name', models.CharField(max_length=100)),
                ('embedding', pgvector.django.vector.VectorField(dimensions=768)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('classifier', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='home.classifier')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('updated_on_pruning', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='home.pruning')),
            ],
            options={
                'verbose_name': 'historical sentence',
                'verbose_name_plural': 'historical sentences',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPruningModeration',
            fields=[
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('validated_at', models.DateTimeField(null=True)),
                ('marked_as_bug_at', models.DateTimeField(null=True)),
                ('bug_description', models.CharField(default=None, max_length=200, null=True)),
                ('category', models.CharField(choices=[('new_pruned_html', 'New Pruned Html')], max_length=16)),
                ('pruned_indices', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(), null=True, size=None)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('marked_as_bug_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('validated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('pruning', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='home.pruning')),
            ],
            options={
                'verbose_name': 'historical pruning moderation',
                'verbose_name_plural': 'historical pruning moderations',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='RegularSchedule',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('church_id', models.SmallIntegerField(blank=True, null=True)),
                ('is_cancellation', models.BooleanField()),
                ('start_time_iso8601', models.CharField(blank=True, max_length=8, null=True)),
                ('end_time_iso8601', models.CharField(blank=True, max_length=8, null=True)),
                ('rrule', models.TextField()),
                ('include_periods', home.models.custom_fields.ChoiceArrayField(base_field=models.CharField(choices=[('january', 'JANUARY'), ('february', 'FEBRUARY'), ('march', 'MARCH'), ('april', 'APRIL'), ('may', 'MAY'), ('june', 'JUNE'), ('july', 'JULY'), ('august', 'AUGUST'), ('september', 'SEPTEMBER'), ('october', 'OCTOBER'), ('november', 'NOVEMBER'), ('december', 'DECEMBER'), ('advent', 'ADVENT'), ('lent', 'LENT'), ('school_holidays', 'SCHOOL_HOLIDAYS')], max_length=16), blank=True, size=None)),
                ('exclude_periods', home.models.custom_fields.ChoiceArrayField(base_field=models.CharField(choices=[('january', 'JANUARY'), ('february', 'FEBRUARY'), ('march', 'MARCH'), ('april', 'APRIL'), ('may', 'MAY'), ('june', 'JUNE'), ('july', 'JULY'), ('august', 'AUGUST'), ('september', 'SEPTEMBER'), ('october', 'OCTOBER'), ('november', 'NOVEMBER'), ('december', 'DECEMBER'), ('advent', 'ADVENT'), ('lent', 'LENT'), ('school_holidays', 'SCHOOL_HOLIDAYS')], max_length=16), blank=True, size=None)),
                ('parsing', simple_history.models.HistoricForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='regular_schedules', to='home.parsing')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Scraping',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('nb_iterations', models.PositiveSmallIntegerField()),
                ('page', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='scraping', to='home.page')),
                ('prunings', models.ManyToManyField(related_name='scrapings', to='home.pruning')),
            ],
            options={
                'get_latest_by': ['updated_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Sentence',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('line', models.TextField(unique=True)),
                ('action', models.CharField(choices=[('start', 'START'), ('show', 'SHOW'), ('hide', 'HIDE'), ('stop', 'STOP')], max_length=5)),
                ('source', models.CharField(choices=[('human', 'HUMAN'), ('ml', 'ML')], max_length=5)),
                ('transformer_name', models.CharField(max_length=100)),
                ('embedding', pgvector.django.vector.VectorField(dimensions=768)),
                ('classifier', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sentences', to='home.classifier')),
                ('prunings', models.ManyToManyField(related_name='sentences', to='home.pruning')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('updated_on_pruning', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='home.pruning')),
            ],
            options={
                'get_latest_by': ['updated_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricalSentenceModeration',
            fields=[
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('validated_at', models.DateTimeField(null=True)),
                ('marked_as_bug_at', models.DateTimeField(null=True)),
                ('bug_description', models.CharField(default=None, max_length=200, null=True)),
                ('action', models.CharField(choices=[('start', 'START'), ('show', 'SHOW'), ('hide', 'HIDE'), ('stop', 'STOP')], max_length=5)),
                ('other_action', models.CharField(choices=[('start', 'START'), ('show', 'SHOW'), ('hide', 'HIDE'), ('stop', 'STOP')], max_length=5)),
                ('category', models.CharField(choices=[('ml_mismatch', 'Ml Mismatch')], max_length=12)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('marked_as_bug_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('validated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('sentence', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='home.sentence')),
            ],
            options={
                'verbose_name': 'historical sentence moderation',
                'verbose_name_plural': 'historical sentence moderations',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AddField(
            model_name='parsing',
            name='websites',
            field=models.ManyToManyField(related_name='parsings', to='home.website'),
        ),
        migrations.AddField(
            model_name='page',
            name='website',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pages', to='home.website'),
        ),
        migrations.CreateModel(
            name='HistoricalWebsiteModeration',
            fields=[
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('validated_at', models.DateTimeField(null=True)),
                ('marked_as_bug_at', models.DateTimeField(null=True)),
                ('bug_description', models.CharField(default=None, max_length=200, null=True)),
                ('category', models.CharField(choices=[('name_concat', 'Name Concatenated'), ('name_websit', 'Name Website Title'), ('hu_no_resp', 'Home Url No Response'), ('hu_no_conf', 'Home Url No Confession'), ('hu_conflict', 'Home Url Conflict'), ('hu_too_long', 'Home Url Too Long')], max_length=11)),
                ('home_url', models.URLField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('marked_as_bug_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('validated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('other_website', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='home.website')),
                ('website', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='home.website')),
            ],
            options={
                'verbose_name': 'historical website moderation',
                'verbose_name_plural': 'historical website moderations',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalParishModeration',
            fields=[
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('validated_at', models.DateTimeField(null=True)),
                ('marked_as_bug_at', models.DateTimeField(null=True)),
                ('bug_description', models.CharField(default=None, max_length=200, null=True)),
                ('category', models.CharField(choices=[('name_differs', 'Name Differs'), ('website_differs', 'Website Differs'), ('added_parish', 'Added Parish'), ('deleted_parish', 'Deleted Parish')], max_length=16)),
                ('source', models.CharField(choices=[('messesinfo', 'Messesinfo'), ('lehavre', 'Lehavre')], max_length=10)),
                ('name', models.CharField(max_length=100, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('marked_as_bug_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('validated_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('parish', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='home.parish')),
                ('website', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='home.website')),
            ],
            options={
                'verbose_name': 'historical parish moderation',
                'verbose_name_plural': 'historical parish moderations',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalParish',
            fields=[
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('name', models.CharField(max_length=100)),
                ('messesinfo_network_id', models.CharField(max_length=100, null=True)),
                ('messesinfo_community_id', models.CharField(db_index=True, max_length=100, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('diocese', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='home.diocese')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('website', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='home.website')),
            ],
            options={
                'verbose_name': 'historical parish',
                'verbose_name_plural': 'historical parishs',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPage',
            fields=[
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(blank=True, editable=False)),
                ('updated_at', models.DateTimeField(blank=True, editable=False)),
                ('url', models.URLField()),
                ('pruning_validation_counter', models.SmallIntegerField(default=0)),
                ('pruning_last_validated_at', models.DateTimeField(blank=True, null=True)),
                ('parsing_validation_counter', models.SmallIntegerField(default=0)),
                ('parsing_last_validated_at', models.DateTimeField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('website', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='home.website')),
            ],
            options={
                'verbose_name': 'historical page',
                'verbose_name_plural': 'historical pages',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Crawling',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('error_detail', models.TextField(null=True)),
                ('nb_visited_links', models.PositiveSmallIntegerField()),
                ('nb_success_links', models.PositiveSmallIntegerField()),
                ('website', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='crawlings', to='home.website')),
            ],
            options={
                'get_latest_by': ['updated_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ChurchModeration',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('validated_at', models.DateTimeField(null=True)),
                ('marked_as_bug_at', models.DateTimeField(null=True)),
                ('bug_description', models.CharField(default=None, max_length=200, null=True)),
                ('category', models.CharField(choices=[('loc_null', 'Location Null'), ('loc_api', 'Location From Api'), ('name_differs', 'Name Differs'), ('parish_differs', 'Parish Differs'), ('location_differs', 'Location Differs'), ('added_church', 'Added Church'), ('deleted_church', 'Deleted Church'), ('location_conflict', 'Location Conflict')], max_length=17)),
                ('source', models.CharField(choices=[('messesinfo', 'Messesinfo'), ('lehavre', 'Lehavre')], max_length=10)),
                ('name', models.CharField(max_length=100, null=True)),
                ('location', django.contrib.gis.db.models.fields.PointField(geography=True, null=True, srid=4326)),
                ('address', models.CharField(max_length=100, null=True)),
                ('zipcode', models.CharField(max_length=5, null=True)),
                ('city', models.CharField(max_length=50, null=True)),
                ('messesinfo_id', models.CharField(max_length=100, null=True)),
                ('church', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moderations', to='home.church')),
                ('marked_as_bug_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='church_marked_as_bug_by', to=settings.AUTH_USER_MODEL)),
                ('similar_churches', models.ManyToManyField(related_name='similar_moderations', to='home.church')),
                ('validated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='church_validated_by', to=settings.AUTH_USER_MODEL)),
                ('parish', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='church_moderations', to='home.parish')),
            ],
            options={
                'unique_together': {('church', 'category', 'source')},
            },
        ),
        migrations.CreateModel(
            name='PruningModeration',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('validated_at', models.DateTimeField(null=True)),
                ('marked_as_bug_at', models.DateTimeField(null=True)),
                ('bug_description', models.CharField(default=None, max_length=200, null=True)),
                ('category', models.CharField(choices=[('new_pruned_html', 'New Pruned Html')], max_length=16)),
                ('pruned_indices', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveSmallIntegerField(), null=True, size=None)),
                ('marked_as_bug_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pruning_marked_as_bug_by', to=settings.AUTH_USER_MODEL)),
                ('pruning', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moderations', to='home.pruning')),
                ('validated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pruning_validated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('pruning', 'category')},
            },
        ),
        migrations.CreateModel(
            name='SentenceModeration',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('validated_at', models.DateTimeField(null=True)),
                ('marked_as_bug_at', models.DateTimeField(null=True)),
                ('bug_description', models.CharField(default=None, max_length=200, null=True)),
                ('action', models.CharField(choices=[('start', 'START'), ('show', 'SHOW'), ('hide', 'HIDE'), ('stop', 'STOP')], max_length=5)),
                ('other_action', models.CharField(choices=[('start', 'START'), ('show', 'SHOW'), ('hide', 'HIDE'), ('stop', 'STOP')], max_length=5)),
                ('category', models.CharField(choices=[('ml_mismatch', 'Ml Mismatch')], max_length=12)),
                ('marked_as_bug_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sentence_marked_as_bug_by', to=settings.AUTH_USER_MODEL)),
                ('sentence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moderations', to='home.sentence')),
                ('validated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sentence_validated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('sentence', 'category')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='parsing',
            unique_together={('truncated_html_hash', 'church_desc_by_id')},
        ),
        migrations.CreateModel(
            name='ParishModeration',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('validated_at', models.DateTimeField(null=True)),
                ('marked_as_bug_at', models.DateTimeField(null=True)),
                ('bug_description', models.CharField(default=None, max_length=200, null=True)),
                ('category', models.CharField(choices=[('name_differs', 'Name Differs'), ('website_differs', 'Website Differs'), ('added_parish', 'Added Parish'), ('deleted_parish', 'Deleted Parish')], max_length=16)),
                ('source', models.CharField(choices=[('messesinfo', 'Messesinfo'), ('lehavre', 'Lehavre')], max_length=10)),
                ('name', models.CharField(max_length=100, null=True)),
                ('marked_as_bug_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='parish_marked_as_bug_by', to=settings.AUTH_USER_MODEL)),
                ('parish', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moderations', to='home.parish')),
                ('similar_parishes', models.ManyToManyField(related_name='similar_moderations', to='home.parish')),
                ('validated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='parish_validated_by', to=settings.AUTH_USER_MODEL)),
                ('website', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='parish_moderations', to='home.website')),
            ],
            options={
                'unique_together': {('parish', 'category', 'source')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='page',
            unique_together={('url', 'website')},
        ),
        migrations.CreateModel(
            name='WebsiteModeration',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('validated_at', models.DateTimeField(null=True)),
                ('marked_as_bug_at', models.DateTimeField(null=True)),
                ('bug_description', models.CharField(default=None, max_length=200, null=True)),
                ('category', models.CharField(choices=[('name_concat', 'Name Concatenated'), ('name_websit', 'Name Website Title'), ('hu_no_resp', 'Home Url No Response'), ('hu_no_conf', 'Home Url No Confession'), ('hu_conflict', 'Home Url Conflict'), ('hu_too_long', 'Home Url Too Long')], max_length=11)),
                ('home_url', models.URLField(null=True)),
                ('marked_as_bug_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='website_marked_as_bug_by', to=settings.AUTH_USER_MODEL)),
                ('other_website', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='other_moderations', to='home.website')),
                ('validated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='website_validated_by', to=settings.AUTH_USER_MODEL)),
                ('website', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moderations', to='home.website')),
            ],
            options={
                'unique_together': {('website', 'category')},
            },
        ),
    ]
